---
title: "Lab5"
author: "Derek Walker"
format:
  html:
    embed-resources: true
---
```{r message=F, warning=FALSE}
if(!require("R.utils")){ install.packages("R.utils")
library("R.utils")}
library(dtplyr)
library(dplyr)
library(data.table)
met_url <- "https://github.com/USCbiostats/data-science-data/raw/master/02_met/met_all.gz"
tmp <- "met.gz"
if (!file.exists(tmp)) {
  download.file(
    url      = met_url,
    destfile = tmp,
    # method   = "libcurl", timeout = 1000 (you may need this option)
  )
}
tmp<- data.table::fread(tmp)
```

You can add options to executable code like this

```{r message=F, warning=FALSE}
dat <- tmp[,c(USAFID, WBAN, year, month, day, hour, min, lat, lon, elev, wind.sp, temp, atm.press)]

stations <- fread("ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.csv")
stations[, USAF := as.integer(USAF)]

# Dealing with NAs and 999999
stations[, USAF   := fifelse(USAF == 999999, NA_integer_, USAF)]
stations[, CTRY   := fifelse(CTRY == "", NA_character_, CTRY)]
stations[, STATE  := fifelse(STATE == "", NA_character_, STATE)]

# Selecting the three relevant columns, and keeping unique records
stations <- unique(stations[, list(USAF, CTRY, STATE)])

# Dropping NAs
stations <- stations[!is.na(USAF)]

# Removing duplicates
stations[, n := 1:.N, by = .(USAF)]
stations <- stations[n == 1,][, n := NULL]

dat <- merge(
  # Data
  x     = tmp,      
  y     = stations, 
  # List of variables to match
  by.x  = "USAFID",
  by.y  = "USAF", 
  # Which obs to keep?
  all.x = TRUE,      
  all.y = FALSE
  )
attach(dat)
```

```{r message=F, warning=FALSE}
dat[, temp50   := quantile(temp, probs = .5, na.rm = TRUE)]
dat[, atmp50   := quantile(atm.press, probs = .5, na.rm = TRUE)]
dat[, windsp50 := quantile(wind.sp, probs = .5, na.rm = TRUE)]
head(dat)

dat[which.min(abs(temp - temp50))] #720113
dat[which.min(abs(atm.press - atmp50))] #690150
dat[which.min(abs(wind.sp - windsp50))] #690150
```

The three do not coincide with one another.

```{r}
dat[, temp50s   := quantile(temp, probs = .5, na.rm = TRUE), by = STATE]
dat[, atmp50s   := quantile(atm.press, probs = .5, na.rm = TRUE), by = STATE]
dat[, windsp50s := quantile(wind.sp, probs = .5, na.rm = TRUE), by = STATE]

dat[, tempdif  := which.min(abs(temp - temp50s)), by=STATE]
dat[, recordid := 1:.N, by = STATE]
dat_temp <- dat[recordid == tempdif, .(USAFID, temp, temp50s, STATE)]
dat_temp


dat[, tempdif  := which.min(abs(atm.press - atmp50s)), by=STATE]
dat[recordid == tempdif, .(USAFID, atm.press, atmp50s, by=STATE)]

dat[, tempdif  := which.min(abs(wind.sp - windsp50s)), by=STATE]
dat[recordid == tempdif, .(USAFID, wind.sp, windsp50s, by=STATE)]
```

```{r message=F, warning=FALSE}
library(leaflet)

dat <- unique(tmp[, .(USAFID, STATE, lon, lat)])
dat[, n := 1:.N, by = USAFID]
dat <- dat[n == 1]

dat[, lat_mid := quantile(lat, probs = .5, na.rm = TRUE), by = STATE]
dat[, lon_mid := quantile(lon, probs = .5, na.rm = TRUE), by = STATE]

dat[,  distance := sqrt((lat - lat_mid)^2 + (lon - lon_mid)^2)]
dat[, minrecord := which.min(distance), by = STATE]
dat[, n := 1:.N, by = STATE]
dat_loc <- dat[n == minrecord, .(USAFID, STATE, lon, lat)]
dat_loc

dat_all <- tmp[, .(USAFID, lat, lon, STATE)][, .SD[1], by = "USAFID"]

dat_temp <- merge(
  x = dat_temp,
  y = dat_all,
  by = "USAFID",
  all.x = TRUE, all.y = FALSE
)
library(leaflet)

datmap1 <- dat_loc[, .(lon, lat)]
datmap1[, type := "Center of the state"]

datmap2 <- dat_temp[, .(lon, lat)]
datmap2[, type := "Center of the Temp"]
dat <- rbind(datmap1, datmap2)

rh_pal <- colorFactor(c('darkgreen', 'red'),
                       domain = as.factor(dat$type))
leaflet(dat) %>%
  addProviderTiles("OpenStreetMap") %>%
  addCircles(lng = ~lon, lat = ~lat, color=~rh_pal(type), opacity=1,fillOpacity=1, radius=500)

```

q4_sum \<- q4 %\>% group_by(avgtemplvl) %\>%

summarise(

Numentries = count(avgtemplvl),

temp_avg = mean(temp, na.rm=TRUE),

wind.sp_avg = mean(wind.sp, na.rm=TRUE),

atm.press_avg = mean(atm.press, na.rm = TRUE)

) %\>% arrange(avgtemplvl)

```{r message=F, warning=FALSE}
dat <- merge(
  # Data
  x     = tmp,      
  y     = stations, 
  # List of variables to match
  by.x  = "USAFID",
  by.y  = "USAF", 
  # Which obs to keep?
  all.x = TRUE,      
  all.y = FALSE
  )
attach(dat)
q4<- dat[, .(
    temp_avg      = mean(temp, na.rm=TRUE)
    ), by = STATE][order(STATE)]

q4$avgtemplvl <- ifelse(q4$temp_avg<20,"Low",
                        ifelse(q4$temp_avg>=20 & q4$temp_avg <25,"Mid",
                               ifelse(q4$temp_avg > 25, "High", NA)))


q4 <- merge(
  # Data
  x     = q4,      
  y     = dat, 
  # List of variables to match
  by.x  = "STATE",
  by.y  = "STATE", 
  # Which obs to keep?
  all.x = TRUE,      
  all.y = FALSE
  )
head(q4, 20)


attach(q4)
q4_sum <- q4 %>%  group_by(avgtemplvl) %>%
    summarise(
      temp_avg = mean(temp, na.rm=TRUE),
      wind.sp_avg   = mean(wind.sp, na.rm=TRUE),
      atm.press_avg = mean(atm.press, na.rm = TRUE)
    )%>% arrange(avgtemplvl)
q4_sum
#I tried :(
```